<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on 0e1dev</title>
    <link>http://0e1dev.com/tags/react/</link>
    <description>Recent content in React on 0e1dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sun, 18 Mar 2018 15:26:12 -0300</lastBuildDate>
    
	<atom:link href="http://0e1dev.com/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adicionando, Lendo e Observando dados no Firebase com React</title>
      <link>http://0e1dev.com/post/adicionando-lendo-e-observando-dados-no-firebase-react/</link>
      <pubDate>Sun, 18 Mar 2018 15:26:12 -0300</pubDate>
      
      <guid>http://0e1dev.com/post/adicionando-lendo-e-observando-dados-no-firebase-react/</guid>
      <description>Olá a todos!
Hoje iremos aprender como trabalhar com o Firebase junto do React.
O que é o Firebase? O Firebase é uma plataforma de desenvolvimento que atualmente é mantida pelo Google. As principais funcionalidades dele são o Realtime Database e o Authentication.
Além destas 2 funcionalidades, o Firebase disponibiliza de outros serviços como Cloud Messaging (para disparar notificações em iOS, Android e Web), Storage (para armazenar arquivos estáticos, uploads, etc), Hosting (semelhante ao AWS S3), entre outros.</description>
    </item>
    
    <item>
      <title>Usando Fragments No React</title>
      <link>http://0e1dev.com/post/usando-fragments-no-react/</link>
      <pubDate>Sat, 02 Dec 2017 15:53:10 -0200</pubDate>
      
      <guid>http://0e1dev.com/post/usando-fragments-no-react/</guid>
      <description>Fragments é um recurso novo, adicionado na última versão do React (v16.2). Este recurso permite que nós criemos uma listagem de sub-componentes, sem necessariamente adicionar um componente pai.
Quem já trabalhou com React, sabe como é chato ter que sempre criar uma &amp;lt;div /&amp;gt; ou algum elemento equivalente, para usá-lo de componente pai, e então retornar uma listagem com os componentes filhos.
Os Fragments vieram justamente para resolver este tipo de situação.</description>
    </item>
    
    <item>
      <title>Ciclo de vida de um componente em React</title>
      <link>http://0e1dev.com/post/ciclo-de-vida-de-um-componente-em-react/</link>
      <pubDate>Tue, 28 Nov 2017 14:20:47 -0200</pubDate>
      
      <guid>http://0e1dev.com/post/ciclo-de-vida-de-um-componente-em-react/</guid>
      <description>Olá a todos!
Hoje o assunto a ser tratado no 0e1dev será componentes React. Especificamente, os ciclos de vida deles.
É um assunto deveras simples, apesar de gerar bastante dúvida para os iniciantes.
Componentes para o React tem um ciclo de vida comum, como qualquer ser vivo do nosso planeta.
Assim como nós, humanos, temos a fase da infância, adolescência, e velhice, os componentes tem a fase do componentDidMount, componentWillMount, componentWillReceiveProps, etc.</description>
    </item>
    
  </channel>
</rss>